// 웹 스토리지란 ?
// 웹 스토리지는 서버가 아닌 클라이언트에 데이터를 저장할수 있도록 지원하는 html5의 새로운 기능이다
// 웹 스토리지와 쿠키의 기능 자체는 유사하지만 쿠키는 약4kb까지밖에 저장 공간을 이요하징 못하는 반면에 웹 스토리지는 약 5MB까지 저장 공간을 이용할수 있다 웹스토리지의 최신 스펙은
//  https://www.w3.org/TR/webstorage/에서 확인할수있다.
// 웹 스토리지에는 로컬스토리지와 세션 스토맂가 있다 로컬스토리지와 세션스토맂는 각각의 고유한 특성이 있으며 프로그래머의 필요에 따라 선택적으로사용된다



// 2. 로컬스토리지
// 로컬스토리지는 브라우저에 반영구적으로 데이터를 저장하며 브라우저를 종료해도 데이터가 유지된다.
// 브라우저자체에 반영구적으로 데이터가 유지되지만 도메인이 다른경우에는 로컬스토리지에 접근할수 없다.
// 예를들어 구글에서 로컬스토리지에 저장한 데이터를 다른 웹사이트에서 접근할수없는것과 같다 아래의 코드1은 자바스크릅트를 이용하여 로컬스토리지에 접근한다


localStorage.setItem('item',10);
localStorage.setItem('item2', 'new item');
localStorage.setItem('item3', 0.543534);

console.log(localStorage.getItem('item1'));
console.log(localStorage.getItem('item2'));
console.log(localSotrage.getItem('item3'));

//3. 세션스토리지
// 세션스토리지는 각 세션마다 데이터가 개별적으로 저장된다 예를들어 브라우저에서 여러개의 탭을 실행하면 탭마다 개별적으로 데이터가 저장되는것이다.
// 세션스토리지는 로컬스토리지와 다르게 세션을 종료하면 데이터가 자동으로 제거되며 같은 도메인읻라도 세션이 다르면 데이터에 접근할수없다.
// 아래의 코드2는 자바스크립트를 이용하여 세션스토리지에 접근한다. 세션스토리지에서 데이터를 얻는방법은 로컬스토리지에서 데이터를 읽는 방법과 동일하다


sessionStorage.setItem('item',10);
sessionStorage.setItem('item2', 'new item');
sessionStorage.setItem('item3', 0.543534);