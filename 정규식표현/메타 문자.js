// 외워야함


//문자그룹 (Character Set, [], [^])


// gray와 grey를 모두 검색할 수 있는 문자열을 만들어봅니다
const str = "gray and grey";

str.match(/gr[ae]y/g);
// (2) ["gray", "grey"]



// 대괄호([])로 묶인 긍정 문자 그룹은 대괄호 내부의 문자열 중 하나라도 일치하는 경우를 의미합니다.
// 이 때 대괄호 내부에 들어가는 특수문자는 메타 문자로 취급되지 않기 때문에, 별도로 이스케이프 하지 않아도 된다는 특징이 있습니다.


// 특수문자 문자열을 만들어봅니다
const abc = "!?@#$%^&";

// [] 안에 있는 특수문자는 리터럴 특수문자로 취급됩니다
abc.match(/[?!.]/g);
// (2) ["!", "?"]


//문자 그룹에서 연속된 문자열을 나타내고자 하는 경우, 범위 지정 구문(dash, -) 를 이용해 보다 간략하게 표기를 할 수 있습니다.

// 아래의 두 정규식은 같습니다
const regex1 = /[A-Z]/;
const regex2 = /[ABCDEFGHIJKLMNOPQRSTUVWXYZ]/;

// 아래의 두 정규식도 같습니다
const regex3 = /[0-9]/;
const regex4 = /[0123456789]/;

// 이를 이용해 한글도 나타낼 수 있습니다
const regex5 = /[가-힣]/;


// 숫자와 문자가 섞인 문자열을 만들었습니다
const str3 = "2020 07 18 Saturday";

// 숫자만 찾아보았습니다
str3.match(/[0-9]/g);
// (8) ["2", "0", "2", "0", "0", "7", "1", "8"]

// 숫자가 아닌 것만 찾아보았습니다
str3.match(/[^0-9]/g);
// (11) [" ", " ", " ", "S", "a", "t", "u", "r", "d", "a", "y"]